/**
 * How to use this template:
 *
 * This file contains all the boilerplate necessary for a Prism theme along with template rules for you to fill in.
 *
 * All properties with the value `unset` are for you to change.
 * You should fill in all `color` and `background` properties.
 * If you don't need an `unset` property (e.g. `border-radius`), then feel free to remove it.
 * You are also free to add more properties that aren't stated, such as `text-shadow`.
 * If you wish to style the plugins, you may grab their selectors from their respective .css files in the template folder.
 *
 * Your finished theme should have all `unset` properties either filled in or removed.
 */

/* Set the main properties of the code, code blocks, and inline code */
code[class*="language-"],
pre[class*="language-"] {
    background: var(--theme-code-background);
    color: var(--theme-code-base);
    font-family: var(--theme-code-font);
    /* The following properties are standard, please leave them as they are */
    font-size: 1em;
    direction: ltr;
    text-align: left;
    white-space: pre;
    word-spacing: normal;
    word-break: normal;
    line-height: 1.5;
    /* The default is 4, but you could change it if you really, really want to */
    -moz-tab-size: 4;
    -o-tab-size: 4;
    tab-size: 4;
    /* The following properties are also standard */
    -webkit-hyphens: none;
    -moz-hyphens: none;
    -ms-hyphens: none;
    hyphens: none;
}

/* Optional: What the code looks like when highlighted */
/*code[class*="language-"]::-moz-selection,*/
/*code[class*="language-"] ::-moz-selection,*/
/*pre[class*="language-"]::-moz-selection,*/
/*pre[class*="language-"] ::-moz-selection {*/
/*    background: unset;*/
/*    color: unset;*/
/*}*/

/*code[class*="language-"]::selection,*/
/*code[class*="language-"] ::selection,*/
/*pre[class*="language-"]::selection,*/
/*pre[class*="language-"] ::selection {*/
/*    background: unset;*/
/*    color: unset;*/
/*}*/

/* Properties specific to code blocks */
pre[class*="language-"] {
    padding: 1em; /* this is standard */
    margin: 0.5em 0; /* this is the default */
    overflow: auto; /* this is standard */
    border: none;
    border-radius: 4px;
}

/* Properties specific to inline code */
:not(pre) > code[class*="language-"] {
    padding: 0.1em; /* this is the default */
    border-radius: 4px;
    white-space: normal; /* this is standard */
}

/**
 * These are the minimum tokens you must style, you can rearrange them and/or style more tokens as you want
 * The concepts behind these standard tokens, as well as some examples, can be found here: https://prismjs.com/tokens.html
 */
.token.comment {
    color: var(--theme-code-comment);
}

.token.prolog {
    color: var(--theme-code-xml-element);
}

.token.cdata {
    color: var(--theme-code-xml-element);
}

.token.doctype {
    color: var(--theme-code-xml-element);
}

.token.punctuation {
    color: unset;
}

.token.entity {
    color: var(--theme-code-number);
}

.token.attr-name {
    color: var(--theme-code-xml-attribute);
}

.token.class-name {
    color: var(--theme-code-type);
}

.token.boolean {
    color: var(--theme-code-keyword);
}

.token.constant {
    color: unset;
}

.token.number {
    color: var(--theme-code-number);
}

.token.atrule {
    color: unset;
}

.token.keyword {
    color: var(--theme-code-keyword);
}

.token.property {
    color: unset;
}

.token.tag {
    color: var(--theme-code-xml-element);
}

.token.symbol {
    color: unset;
}

.token.deleted {
    color: var(--theme-diff-del);
}

.token.important {
    color: var(--theme-code-keyword);
}

.token.selector {
    color: var(--theme-code-keyword);
}

.token.string {
    color: var(--theme-code-string);
}

.token.char {
    color: var(--theme-code-string);
}

.token.builtin {
    color: var(--theme-code-keyword);
}

.token.inserted {
    color: var(--theme-diff-ins);
}

.token.regex {
    color: var(--theme-code-string);
}

.token.attr-value {
    color: var(--theme-code-string)
}

.token.variable {
    color: unset;
}

.token.operator {
    color: unset;
}

.token.function {
    color: unset;
}

.token.url {
    color: unset;
}

/* The following rules are pretty similar across themes, but feel free to adjust them */
.token.bold {
    font-weight: bold;
}

.token.italic {
    font-style: italic;
}

.token.entity {
    cursor: help;
}

.token.namespace {
    opacity: 0.7;
}

/* LANGUAGE-SPECIFIC OVERRIDES */
/* If you'd like your theme to have overrides for specific languages, here's an example, you can remove it and/or add more overrides */
/*.language-css .token.important {*/
/*    color: unset;*/
/*}*/
